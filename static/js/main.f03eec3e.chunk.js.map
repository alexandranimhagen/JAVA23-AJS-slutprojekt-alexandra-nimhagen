{"version":3,"sources":["firebase.js","components/TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","categoryClassNames","ux","dev frontend","dev backend","design","testing","categoryTagClassNames","TaskList","_ref","tasks","setTasks","loading","error","setError","useState","assignees","setAssignees","assigneeErrors","setAssigneeErrors","toastMessage","setToastMessage","taskToDelete","setTaskToDelete","handleAssignSubmit","e","id","preventDefault","async","assignee","taskDoc","doc","updateDoc","assigned","status","prevTasks","map","task","prev","[object Object]","message","assignTask","moveTask","direction","taskIndex","findIndex","newTasks","movedTask","splice","length","renderTasks","statusTitle","tasksByStatus","filter","React","createElement","className","index","assigneeError","key","concat","category","assignment","onSubmit","type","placeholder","value","onChange","handleAssigneeChange","target","required","onClick","markAsDone","handleRemoveClick","deleteDoc","setTimeout","cancelRemoveTask","App","setLoading","setAssignment","setCategory","assignmentError","setAssignmentError","categoryError","setCategoryError","useEffect","querySnapshot","getDocs","collection","docs","data","fetchTasks","event","hasError","newTask","docRef","addDoc","Object","keys","cat","charAt","toUpperCase","slice","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.f03eec3e.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getFirestore } from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB7SZ20O6djh2NzZcDqBsi7MIWjpWrg-x4\",\r\n  authDomain: \"slutprojekt-scrum-board.firebaseapp.com\",\r\n  projectId: \"slutprojekt-scrum-board\",\r\n  storageBucket: \"slutprojekt-scrum-board.appspot.com\",\r\n  messagingSenderId: \"902046492840\",\r\n  appId: \"1:902046492840:web:84b3baa8bf8caf62e03a9d\",\r\n  measurementId: \"G-WQ42ZRXHKG\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\n\r\nexport { db };\r\n","import React, { useState } from 'react';\r\nimport { db } from '../firebase';\r\nimport { updateDoc, deleteDoc, doc } from 'firebase/firestore';\r\nimport '../App.css'; \r\n\r\nconst categoryClassNames = {\r\n  'ux': 'card-ux',\r\n  'dev frontend': 'card-dev-frontend',\r\n  'dev backend': 'card-dev-backend',\r\n  'design': 'card-design',\r\n  'testing': 'card-testing'\r\n};\r\n\r\nconst categoryTagClassNames = {\r\n  'ux': 'tag-ux',\r\n  'dev frontend': 'tag-dev-frontend',\r\n  'dev backend': 'tag-dev-backend',\r\n  'design': 'tag-design',\r\n  'testing': 'tag-testing'\r\n};\r\n\r\nconst TaskList = ({ tasks, setTasks, loading }) => {\r\n  const [error, setError] = useState(null);\r\n  const [assignees, setAssignees] = useState({});\r\n  const [assigneeErrors, setAssigneeErrors] = useState({});\r\n  const [toastMessage, setToastMessage] = useState('');\r\n  const [taskToDelete, setTaskToDelete] = useState(null);\r\n\r\n  const handleAssigneeChange = (id, value) => {\r\n    setAssignees((prev) => ({ ...prev, [id]: value }));\r\n    setAssigneeErrors((prev) => ({ ...prev, [id]: '' }));\r\n  };\r\n\r\n  const assignTask = async (id) => {\r\n    const assignee = assignees[id];\r\n    if (!assignee) {\r\n      setAssigneeErrors((prev) => ({ ...prev, [id]: '' }));\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const taskDoc = doc(db, 'assignments', id);\r\n      await updateDoc(taskDoc, { assigned: assignee, status: 'in progress' });\r\n      setTasks(prevTasks => prevTasks.map(task =>\r\n        task.id === id ? { ...task, assigned: assignee, status: 'in progress' } : task\r\n      ));\r\n      setAssignees((prev) => ({ ...prev, [id]: '' }));\r\n      setAssigneeErrors((prev) => ({ ...prev, [id]: '' }));\r\n      setError(null);\r\n    } catch (error) {\r\n      setError('Error assigning task: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleAssignSubmit = (e, id) => {\r\n    e.preventDefault();\r\n    assignTask(id);\r\n  };\r\n\r\n  const markAsDone = async (id) => {\r\n    try {\r\n      const taskDoc = doc(db, 'assignments', id);\r\n      await updateDoc(taskDoc, { status: 'done' });\r\n      setTasks(prevTasks => prevTasks.map(task =>\r\n        task.id === id ? { ...task, status: 'done' } : task\r\n      ));\r\n      setError(null);\r\n    } catch (error) {\r\n      setError('Error marking task as done: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleRemoveClick = (id) => {\r\n    setTaskToDelete(id);\r\n  };\r\n\r\n  const confirmRemoveTask = async () => {\r\n    try {\r\n      const taskDoc = doc(db, 'assignments', taskToDelete);\r\n      await deleteDoc(taskDoc);\r\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== taskToDelete));\r\n      setError(null);\r\n      setToastMessage('Task successfully removed');\r\n      setTimeout(() => setToastMessage(''), 1000); \r\n      setTaskToDelete(null);\r\n    } catch (error) {\r\n      setError('Error removing task: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const cancelRemoveTask = () => {\r\n    setTaskToDelete(null);\r\n  };\r\n\r\n  const moveTask = (id, direction) => {\r\n    const taskIndex = tasks.findIndex(task => task.id === id);\r\n    if (taskIndex === -1) return;\r\n\r\n    const newTasks = [...tasks];\r\n    const [movedTask] = newTasks.splice(taskIndex, 1);\r\n\r\n    if (direction === 'up' && taskIndex > 0) {\r\n      newTasks.splice(taskIndex - 1, 0, movedTask);\r\n    } else if (direction === 'down' && taskIndex < tasks.length - 1) {\r\n      newTasks.splice(taskIndex + 1, 0, movedTask);\r\n    }\r\n\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const renderTasks = (status, statusTitle) => {\r\n    const tasksByStatus = tasks.filter(task => task.status === status);\r\n  \r\n    return (\r\n      <div className=\"task-column\">\r\n        <h2 className=\"column-header\">{statusTitle}</h2>\r\n        {tasksByStatus.map((task, index) => {\r\n          const assignee = assignees[task.id] || '';\r\n          const assigneeError = assigneeErrors[task.id] || '';\r\n          return (\r\n            <div key={task.id} className={`card mb-3 ${categoryClassNames[task.category]}`}>\r\n              <div className=\"card-body\">\r\n                <div className={`category-tag ${categoryTagClassNames[task.category]}`}>{task.category}</div>\r\n                <h5 className=\"card-title\">{task.assignment}</h5>\r\n                <p className=\"card-text\">Assigned to: {task.assigned}</p>\r\n                {status === 'to do' && (\r\n                  <form onSubmit={(e) => handleAssignSubmit(e, task.id)}>\r\n                    <div className=\"input-container\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control mb-2\"\r\n                        placeholder=\"Enter name\"\r\n                        value={assignee}\r\n                        onChange={(e) => handleAssigneeChange(task.id, e.target.value)}\r\n                        required\r\n                      />\r\n                      {assigneeError && <div className=\"custom-tooltip\">{assigneeError}</div>}\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn w-100\">Assign</button>\r\n                  </form>\r\n                )}\r\n                {status === 'in progress' && (\r\n                  <button className=\"btn w-100 btn-done\" onClick={() => markAsDone(task.id)}>Done</button>\r\n                )}\r\n                {status === 'done' && (\r\n                  <button className=\"btn w-100 btn-remove\" onClick={() => handleRemoveClick(task.id)}>Remove</button>\r\n                )}\r\n                {(status === 'to do' || status === 'in progress') && tasksByStatus.length > 1 && (\r\n                  <div className=\"move-buttons\">\r\n                    {index > 0 && <button className=\"move-button\" onClick={() => moveTask(task.id, 'up')}>&#x25B2;</button>}\r\n                    {index < tasksByStatus.length - 1 && <button className=\"move-button\" onClick={() => moveTask(task.id, 'down')}>&#x25BC;</button>}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };  \r\n\r\n  if (loading) {\r\n    return <p>Loading tasks...</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {error && <p className=\"text-danger mt-3\">{error}</p>}\r\n      {toastMessage && <div className=\"toast-message\">{toastMessage}</div>}\r\n      <div className=\"row\">\r\n        {renderTasks('to do', 'To Do')}\r\n        {renderTasks('in progress', 'In Progress')}\r\n        {renderTasks('done', 'Done')}\r\n      </div>\r\n      {taskToDelete !== null && (\r\n        <div className=\"confirm-popup\">\r\n          <p>Are you sure you want to remove this task?</p>\r\n          <button onClick={confirmRemoveTask}>Yes</button>\r\n          <button onClick={cancelRemoveTask}>No</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport TaskList from './components/TaskList';\r\nimport { db } from './firebase';\r\nimport { collection, getDocs, addDoc } from 'firebase/firestore';\r\nimport './App.css';\r\n\r\nconst categoryClassNames = {\r\n  'ux': 'option-ux',\r\n  'design': 'option-design',\r\n  'testing': 'option-testing',\r\n  'dev frontend': 'option-dev-frontend',\r\n  'dev backend': 'option-dev-backend',\r\n};\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [assignment, setAssignment] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [assignmentError, setAssignmentError] = useState('');\r\n  const [categoryError, setCategoryError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      const querySnapshot = await getDocs(collection(db, 'assignments'));\r\n      setTasks(querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const handleTaskAdded = async (event) => {\r\n    event.preventDefault();\r\n    let hasError = false;\r\n\r\n    if (!assignment) {\r\n      setAssignmentError(\"Assignment field cannot be empty\");\r\n      hasError = true;\r\n    } else {\r\n      setAssignmentError('');\r\n    }\r\n\r\n    if (!category) {\r\n      setCategoryError(\"Please select a category\");\r\n      hasError = true;\r\n    } else {\r\n      setCategoryError('');\r\n    }\r\n\r\n    if (hasError) {\r\n      return;\r\n    }\r\n\r\n    const newTask = {\r\n      assignment,\r\n      category,\r\n      status: 'to do',\r\n      assigned: 'none'\r\n    };\r\n    const docRef = await addDoc(collection(db, 'assignments'), newTask);\r\n    setTasks(prevTasks => [...prevTasks, { id: docRef.id, ...newTask }]);\r\n    setAssignment('');\r\n    setCategory('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"my-4\">Scrum Board</h1>\r\n      <div className=\"add-task-container\">\r\n        <form onSubmit={handleTaskAdded} className=\"flex-container\">\r\n          <div className=\"input-container\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control task-input\"\r\n              placeholder=\"Assignment\"\r\n              value={assignment}\r\n              onChange={(e) => setAssignment(e.target.value)}\r\n              required\r\n            />\r\n            {assignmentError && <div className=\"custom-tooltip\">{assignmentError}</div>}\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <select\r\n              className=\"form-select task-category\"\r\n              value={category}\r\n              onChange={(e) => setCategory(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\" className=\"option-default\">Select Category</option>\r\n              {Object.keys(categoryClassNames).map(cat => (\r\n                <option key={cat} value={cat} className={categoryClassNames[cat]}>\r\n                  {cat.charAt(0).toUpperCase() + cat.slice(1)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {categoryError && <div className=\"custom-tooltip\">{categoryError}</div>}\r\n          </div>\r\n          <button type=\"submit\" className=\"btn add-task-button\">Add Task</button>\r\n        </form>\r\n      </div>\r\n      <TaskList tasks={tasks} setTasks={setTasks} loading={loading} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { createRoot } from 'react-dom/client';\r\n\r\nconst container = document.getElementById('root');\r\nconst root = createRoot(container);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}