{"version":3,"sources":["firebase.js","components/TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","categoryClassNames","ux","dev frontend","dev backend","design","testing","buttonClassNames","TaskList","_ref","tasks","setTasks","loading","assignee","setAssignee","useState","error","setError","removeTask","async","window","confirm","taskDoc","doc","id","deleteDoc","prevTasks","filter","task","message","renderTasks","status","map","React","createElement","key","className","concat","category","onClick","assignment","assigned","type","placeholder","value","onChange","e","target","updateDoc","alert","assignTask","markAsDone","App","setLoading","setAssignment","setCategory","useEffect","querySnapshot","getDocs","collection","docs","data","fetchTasks","Object","keys","cat","charAt","toUpperCase","slice","newTask","docRef","addDoc","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.27203dee.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getFirestore } from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB7SZ20O6djh2NzZcDqBsi7MIWjpWrg-x4\",\r\n  authDomain: \"slutprojekt-scrum-board.firebaseapp.com\",\r\n  projectId: \"slutprojekt-scrum-board\",\r\n  storageBucket: \"slutprojekt-scrum-board.appspot.com\",\r\n  messagingSenderId: \"902046492840\",\r\n  appId: \"1:902046492840:web:84b3baa8bf8caf62e03a9d\",\r\n  measurementId: \"G-WQ42ZRXHKG\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\n\r\nexport { db };\r\n","import React, { useState } from 'react';\r\nimport { db } from '../firebase';\r\nimport { updateDoc, deleteDoc, doc } from 'firebase/firestore';\r\n\r\nconst categoryClassNames = {\r\n  'ux': 'card-ux',\r\n  'dev frontend': 'card-dev-frontend',\r\n  'dev backend': 'card-dev-backend',\r\n  'design': 'card-design',\r\n  'testing': 'card-testing'\r\n};\r\n\r\nconst buttonClassNames = {\r\n  'ux': 'btn-ux',\r\n  'dev frontend': 'btn-dev-frontend',\r\n  'dev backend': 'btn-dev-backend',\r\n  'design': 'btn-design',\r\n  'testing': 'btn-testing'\r\n};\r\n\r\nconst TaskList = ({ tasks, setTasks, loading }) => {\r\n  const [assignee, setAssignee] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  const assignTask = async (id) => {\r\n    if (!assignee) {\r\n      window.alert(\"Please assign the task to someone before proceeding.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const taskDoc = doc(db, 'assignments', id);\r\n      await updateDoc(taskDoc, { assigned: assignee, status: 'in progress' });\r\n      setTasks(prevTasks => prevTasks.map(task => \r\n        task.id === id ? { ...task, assigned: assignee, status: 'in progress' } : task\r\n      ));\r\n      setAssignee('');\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(\"Error assigning task: \" + error.message);\r\n    }\r\n  };\r\n\r\n  const markAsDone = async (id) => {\r\n    try {\r\n      const taskDoc = doc(db, 'assignments', id);\r\n      await updateDoc(taskDoc, { status: 'done' });\r\n      setTasks(prevTasks => prevTasks.map(task => \r\n        task.id === id ? { ...task, status: 'done' } : task\r\n      ));\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(\"Error marking task as done: \" + error.message);\r\n    }\r\n  };\r\n\r\n  const removeTask = async (id) => {\r\n    try {\r\n      if (window.confirm(\"Are you sure you want to remove this task?\")) {\r\n        const taskDoc = doc(db, 'assignments', id);\r\n        await deleteDoc(taskDoc);\r\n        setTasks(prevTasks => prevTasks.filter(task => task.id !== id));\r\n        setError(null);\r\n      }\r\n    } catch (error) {\r\n      setError(\"Error removing task: \" + error.message);\r\n    }\r\n  };\r\n\r\n  const renderTasks = (status) => {\r\n    return tasks.filter(task => task.status === status).map(task => (\r\n      <div key={task.id} className={`card mb-3 ${categoryClassNames[task.category]}`}>\r\n        <div className=\"card-body\">\r\n          <button className=\"close btn-remove-task\" onClick={() => removeTask(task.id)}>Ã—</button>\r\n          <h5 className=\"card-title\">{task.assignment}</h5>\r\n          <p className=\"card-text\">Assigned to: {task.assigned}</p>\r\n          {status === 'to do' && (\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-2\"\r\n                placeholder=\"Assign to\"\r\n                value={assignee}\r\n                onChange={(e) => setAssignee(e.target.value)}\r\n              />\r\n              <button className={`btn w-100 ${buttonClassNames[task.category]}`} onClick={() => assignTask(task.id)}>Assign</button>\r\n            </div>\r\n          )}\r\n          {status === 'in progress' && (\r\n            <button className={`btn w-100 btn-done`} onClick={() => markAsDone(task.id)}>Done</button>\r\n          )}\r\n          {status === 'done' && (\r\n            <button className={`btn w-100 btn-remove`} onClick={() => removeTask(task.id)}>Remove</button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Loading tasks...</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {error && <p className=\"text-danger mt-3\">{error}</p>}\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <h2 className=\"column-header\">To Do</h2>\r\n          {renderTasks('to do')}\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <h2 className=\"column-header\">In Progress</h2>\r\n          {renderTasks('in progress')}\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <h2 className=\"column-header\">Done</h2>\r\n          {renderTasks('done')}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport TaskList from './components/TaskList';\r\nimport { db } from './firebase';\r\nimport { collection, getDocs, addDoc } from 'firebase/firestore';\r\nimport './App.css';\r\n\r\nconst categoryClassNames = {\r\n  'ux': 'option-ux',\r\n  'design': 'option-design',\r\n  'testing': 'option-testing',\r\n  'dev frontend': 'option-dev-frontend',\r\n  'dev backend': 'option-dev-backend',\r\n};\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [assignment, setAssignment] = useState('');\r\n  const [category, setCategory] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      const querySnapshot = await getDocs(collection(db, 'assignments'));\r\n      setTasks(querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const handleTaskAdded = async () => {\r\n    if (!assignment) {\r\n      window.alert(\"Assignment field cannot be empty\");\r\n      return;\r\n    }\r\n    if (!category) {\r\n      window.alert(\"Please select a category\");\r\n      return;\r\n    }\r\n    const newTask = {\r\n      assignment,\r\n      category,\r\n      status: 'to do',\r\n      assigned: 'none'\r\n    };\r\n    const docRef = await addDoc(collection(db, 'assignments'), newTask);\r\n    setTasks(prevTasks => [...prevTasks, { id: docRef.id, ...newTask }]);\r\n    setAssignment('');\r\n    setCategory('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"my-4\">Scrum Board</h1>\r\n      <div className=\"add-task-container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control task-input\"\r\n          placeholder=\"Assignment\"\r\n          value={assignment}\r\n          onChange={(e) => setAssignment(e.target.value)}\r\n        />\r\n        <select\r\n          className=\"form-select task-category\"\r\n          value={category}\r\n          onChange={(e) => setCategory(e.target.value)}\r\n        >\r\n          <option value=\"\" className=\"option-default\">Select Category</option>\r\n          {Object.keys(categoryClassNames).map(cat => (\r\n            <option key={cat} value={cat} className={categoryClassNames[cat]}>\r\n              {cat.charAt(0).toUpperCase() + cat.slice(1)}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button className=\"btn add-task-button\" onClick={handleTaskAdded}>Add Task</button>\r\n      </div>\r\n      <TaskList tasks={tasks} setTasks={setTasks} loading={loading} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport React from 'react';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { createRoot } from 'react-dom/client';\r\n\r\nconst container = document.getElementById('root');\r\nconst root = createRoot(container);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}